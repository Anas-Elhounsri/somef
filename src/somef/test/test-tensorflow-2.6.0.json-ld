{
  "@context": "https://doi.org/10.5063/schema/codemeta-2.0",
  "@type": "SoftwareSourceCode",
  "acknowledgments": "Some of TensorFlow's code is derived from Caffe, which is subject to the following copyright notice:\nCOPYRIGHT\nAll contributions by the University of California:\nCopyright (c) 2014, The Regents of the University of California (Regents)\nAll rights reserved.\nAll other contributions:\nCopyright (c) 2014, the respective contributors\nAll rights reserved.\nCaffe uses a shared copyright model: each contributor holds copyright over\ntheir contributions to Caffe. The project versioning records all such\ncontribution and copyright details. If a contributor wants to further mark\ntheir specific copyright on a particular contribution, they should indicate\ntheir copyright solely in the commit message of the change when it is\ncommitted.\nLICENSE\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n\nRedistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n\nRedistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n   ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nCONTRIBUTION AGREEMENT\nBy contributing to the BVLC/caffe repository through pull-request, comment,\nor otherwise, the contributor releases their content to the\nlicense and copyright terms herein.",
  "author": [
    {
      "@id": "https://github.com/tensorflow",
      "@type": "Person"
    }
  ],
  "buildInstructions": [
    "See the [TensorFlow install guide](https://www.tensorflow.org/install) for the\n[pip package](https://www.tensorflow.org/install/pip), to\n[enable GPU support](https://www.tensorflow.org/install/gpu), use a\n[Docker container](https://www.tensorflow.org/install/docker), and\n[build from source](https://www.tensorflow.org/install/source).\n\nTo install the current release, which includes support for\n[CUDA-enabled GPU cards](https://www.tensorflow.org/install/gpu) *(Ubuntu and\nWindows)*:\n\n```\n$ pip install tensorflow\n```\n\nA smaller CPU-only package is also available:\n\n```\n$ pip install tensorflow-cpu\n```\n\nTo update TensorFlow to the latest version, add `--upgrade` flag to the above\ncommands.\n\n*Nightly binaries are available for testing using the\n[tf-nightly](https://pypi.python.org/pypi/tf-nightly) and\n[tf-nightly-cpu](https://pypi.python.org/pypi/tf-nightly-cpu) packages on PyPi.*\n",
    "[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/tensorflow.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:tensorflow)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1486/badge)](https://bestpractices.coreinfrastructure.org/projects/1486)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](CODE_OF_CONDUCT.md)\n \n",
    "Build Type                    | Status                                                                                                                                                                                             | Artifacts\n----------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux CPU**                 | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html)                             | [PyPI](https://pypi.org/project/tf-nightly/)\n**Linux GPU**                 | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html)                   | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Linux XLA**                 | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html)                           | TBA\n**macOS**                     | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html)                       | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows CPU**               | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html)                         | [PyPI](https://pypi.org/project/tf-nightly/)\n**Windows GPU**               | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html)                         | [PyPI](https://pypi.org/project/tf-nightly-gpu/)\n**Android**                   | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html)                                 | [![Download](https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg)](https://bintray.com/google/tensorflow/tensorflow/_latestVersion)\n**Raspberry Pi 0 and 1**      | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html)                             | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl)\n**Raspberry Pi 2 and 3**      | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html)                             | [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl)\n**Libtensorflow MacOS CPU**   | Status Temporarily Unavailable | [Nightly Binary](https://storage.googleapis.com/libtensorflow-nightly/prod/tensorflow/release/macos/latest/macos_cpu_libtensorflow_binaries.tar.gz) [Official GCS](https://storage.googleapis.com/tensorflow/)\n**Libtensorflow Linux CPU**   | Status Temporarily Unavailable | [Nightly Binary](https://storage.googleapis.com/libtensorflow-nightly/prod/tensorflow/release/ubuntu_16/latest/cpu/ubuntu_cpu_libtensorflow_binaries.tar.gz) [Official GCS](https://storage.googleapis.com/tensorflow/)\n**Libtensorflow Linux GPU**   | Status Temporarily Unavailable | [Nightly Binary](https://storage.googleapis.com/libtensorflow-nightly/prod/tensorflow/release/ubuntu_16/latest/gpu/ubuntu_gpu_libtensorflow_binaries.tar.gz) [Official GCS](https://storage.googleapis.com/tensorflow/)\n**Libtensorflow Windows CPU** | Status Temporarily Unavailable | [Nightly Binary](https://storage.googleapis.com/libtensorflow-nightly/prod/tensorflow/release/windows/latest/cpu/windows_cpu_libtensorflow_binaries.tar.gz) [Official GCS](https://storage.googleapis.com/tensorflow/)\n**Libtensorflow Windows GPU** | Status Temporarily Unavailable | [Nightly Binary](https://storage.googleapis.com/libtensorflow-nightly/prod/tensorflow/release/windows/latest/gpu/windows_gpu_libtensorflow_binaries.tar.gz) [Official GCS](https://storage.googleapis.com/tensorflow/)\n \n"
  ],
  "citation": [
    "[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/tensorflow.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:tensorflow)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1486/badge)](https://bestpractices.coreinfrastructure.org/projects/1486)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](CODE_OF_CONDUCT.md)\n \n"
  ],
  "codeOfConduct": "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/CODE_OF_CONDUCT.md",
  "codeRepository": "git+https://github.com/tensorflow/tensorflow.git",
  "contributingGuidelines": "<!-- mdformat off(b/169948621#comment2) -->\n\n<!--\nSemi-automated TOC generation with instructions from\nhttps://github.com/ekalinin/github-markdown-toc#auto-insert-and-update-toc\n-->\n\n<!--ts-->\n\nContributing Guidelines\nGeneral Pull Request Guidelines\nGuidelines for Specific Contribution Categories\nBug Fixes\nReference Kernel Implementations\nOptimized Kernel Implementations\nNew Target / Platform / IDE / Examples\nNew Features\n\n\n\n\nDevelopment Workflow Notes\nInitial Setup\nBefore submitting your PR\nDuring the PR review\nReviewer notes\nPython notes\n\n\nContinuous Integration System\n\n<!-- Added by: advaitjain, at: Wed 27 Jan 2021 02:25:07 PM PST -->\n\n<!--te-->\n\nContributing Guidelines\nWe look forward to your contributions to the TensorFlow Lite Micro codebase and\nprovide guidelines with the goal of enabling community contributions while still\nmaintaining code health, maintainability, and consistency in style.\nPlease note that while these guidelines may seem onerous to some developers,\nthey are derived from Google's software engineering best practices.\nBefore we describe project-specific guidelines, we recommend that external\ncontributors read these tips from the Google Testing Blog:\n\nCode Health: Providing Context with Commit Messages and Bug Reports\nCode Health: Understanding Code In Review\nCode Health: Too Many Comments on Your Code Reviews?\nCode Health: To Comment or Not to Comment?\n\nWe also recommend that contributors take a look at the\nTensorflow Contributing Guidelines.\nGeneral Pull Request Guidelines\nWe strongly recommend that contributors:\n\n\nInitiate a conversation with the TFLM team via a\n    TF Lite Micro Github issue\n    as early as possible.\n\n\nThis enables us to give guidance on how to proceed, prevent duplicated\n    effort and also point to alternatives as well as context if we are not\n    able to accept a particular contribution at a given time.\n\n\nIdeally, you should make an issue before starting to work on a\n    pull request and provide context on both what you want to contribute and\n    why.\n\n\n\n\nOnce step 1. is complete and it is determined that a PR from an external\n    contributor is the way to go, please follow these guidelines from\n    Google's Engineering Practices documentation:\n\n\nSend Small Pull Requests\n\nIf a pull request is doing more than one thing, the reviewer will\n    request that it be broken up into two or more PRs.\n\n\n\nWrite Good Pull Request Descriptions\n\n\nWe require that all PR descriptions link to the github issue created\n    in step 1.\n\n\nWhile github offers flexibility in linking\n    commits and issues,\n    we require that the PR description have a separate line with either\n    Fixes #nn (if the PR fixes the issue) or Issue #nn if the PR\n    addresses some aspect of an issue without fixing it.\n\n\nWe will be adding internal checks that automate this requirement by\n    matching the PR description to the regexp: (Fixes|Issue) #\n\n\n\n\n\n\nUnit tests are critical to a healthy codebase. PRs without tests should be\n    the exception rather than the norm. And contributions to improve, simplify,\n    or make the unit tests more exhaustive are welcome! Please refer to\n    this guideline\n    on how test code and writing small PRs should be reconciled.\n\n\nGuidelines for Specific Contribution Categories\nWe provide some additional guidelines for different categories of contributions.\nBug Fixes\nPull requests that fix bugs are always welcome and often uncontroversial, unless\nthere is a conflict between different requirements from the platform, or if\nfixing a bug needs a bigger architectural change.\n\nCreate a\n    TF Lite Micro Github issue\n    to determine the scope of the bug fix.\nSend a PR (if that is determined to be the best path forward).\nBugfix PRs should be accompanied by a test case that fails prior to the fix\n    and passes with the fix. This validates that the fix works as expected, and\n    helps prevent future regressions.\n\nReference Kernel Implementations\nPull requests that port reference kernels from TF Lite Mobile to TF Lite Micro\nare welcome once we have enough context from the contributor on why the\nadditional kernel is needed.\n\n\nPlease create a\n    TF Lite Micro Github issue\n    before starting on any such PRs with as much context as possible, such as:\n\nWhat is the model architecture?\nWhat is the application that you are targetting?\nWhat embedded target(s) are you planning to run on?\nMotivate your use-case and the need for adding support for this\n    additional OP.\n\n\n\nIn the interest of having\n    small pull requests,\n    limit each pull request to porting a single kernel (and the corresponding\n    test).\n\n\nTODO(b/165627437): Create and link to a guide to porting reference ops.\n\n\nOptimized Kernel Implementations\nIn order to have the TFLM codebase be a central repository of optimized kernel\nimplementations, we would like to make some improvements to the current\ninfrastructure to enable adding and maintaining optimized kernel implementations\nin a scalable way.\nUntil that work is complete, we are requesting a pause on contributions that\nadd new optimized kernel implementations. We plan to make these improvements by\nOctober 2020 and will provide additional guidelines at that time.\n\n\nIf you would like to have an exception to this pause, with the understanding\n    that your optimized kernels will break as we improve the underlying\n    framework, then please send an email to the SIG Micro email\n    group to figure out\n    a middle ground.\n\n\nEvery optimized kernel directory must have a README.md with the github IDs\n    of the maintainers and any other relevant documentation. PRs that add\n    maintainers to the existing optimized kernels are always welcome.\n\n\nNew Target / Platform / IDE / Examples\nAs discussed in the\nSIG-micro Aug 12, 2020 meeting,\nwe are currently pausing accepting pull requests that add new targets,\nplatforms, IDE integration or examples while we revisit some of the\ninfrastructure to enable us to make this process easier and more scalable.\nIn the meantime, snapshotting and/or forking the tensorflow repo could be a\nviable way to prototype platform support.\nHaving said that, we still invite\nTF Lite Micro Github issues\non this topic as we would like to enable such integration in the future.\nNew Features\nAs discussed in the\nSIG-micro Aug 12, 2020 meeting,\nwe are currently pausing accepting pull requests that add new features while\nwe revisit some of the infrastructure to enable us to make this process easier\nand more scalable.\nHaving said that, we still invite feature requests via\nTF Lite Micro Github issues\nto determine if the requested feature aligns with the TFLM roadmap.\nDevelopment Workflow Notes\nInitial Setup\nBelow are some tips that might be useful and improve the development experience.\n\n\nAdd the Refined GitHub\n  plugin to make the github experience even better.\n\n\nCode search the TfLite Micro codebase\n  on Sourcegraph. And optionally install the plugin that enables GitHub integration.\n\n\nInstall bazel and buildifier.\n\n\nInstall the latest clang and clang-format. For example,\n  here\n  is the  what we do for the TFLM continuous integration Docker container.\n\n\nGet a copy of cpplint\n\n\nAdd a git hook to check for code style etc. prior to creating a pull request:\n  cp tensorflow/lite/micro/tools/dev_setup/pre-push.tflm .git/hooks/pre-push\n\n\nBefore submitting your PR\n\n\nRun in-place clang-format on all the files that are modified in your git\n    tree with\nclang-format -i -style=google `git ls-files -m | grep \"\\.cc\"`\nclang-format -i -style=google `git ls-files -m | grep \"\\.h\"`\n\n\nMake sure your code is lint-free.\ncpplint.py `git ls-files -m`\n\n\nRun all the tests for x86, and any other platform that you are modifying.\ntensorflow/lite/micro/tools/ci_build/test_x86.sh\nPlease check the READMEs in the optimized kernel directories for specific\ninstructions.\n\n\nSometimes, bugs are caught by the sanitizers that can go unnoticed\n    via the Makefile. To run a test with the different sanitizers, use the\n    following commands (replace micro_interpreter_test with the target that you\n    want to test:\nCC=clang bazel run --config=asan tensorflow/lite/micro:micro_interpreter_test\nCC=clang bazel run --config=msan tensorflow/lite/micro:micro_interpreter_test\nCC=clang bazel run --config=ubsan tensorflow/lite/micro:micro_interpreter_test\n\n\nDuring the PR review\n\n\nDo not change the git version history.\n\n\nAlways merge upstream/master (do not rebase) and no force-pushes\n    please.\n\n\nHaving an extra merge commit it ok as the github review tool handles\n    that gracefully.\n\n\nAssuming that you forked tensorflow and added a remote called upstream with:\ngit remote add upstream https://github.com/tensorflow/tensorflow.git\nFetch the latest changes from upstream and merge into your local branch.\ngit fetch upstream\ngit merge upstream/master\nIn case of a merge conflict, resolve via:\n```\ngit mergetool\nUse your favorite diff tools (e.g. meld) to resolve the conflicts.\ngit add <files that were manually resolved>\ngit commit\n```\n\n\nIf a force push seems to be the only path forward, please stop and let your\n    PR reviewer know before force pushing. We will attempt to do the merge\n    for you. This will also help us better understand in what conditions a\n    force-push may be unavoidable.\n\n\nReviewer notes\n\n\nGIthub CLI can be useful to quickly checkout a PR\n    to test locally.\ngh pr checkout &lt;PR number&gt;\n\n\nGoogle engineers on the Tensorflow team will have the permissions to push\n    edits to most PRs. This can be useful to make some small fixes as a result\n    of errors due to internal checks that are not easily reproducible via\n    github.\nOne example of this is\nthis comment.\nAnd a sketch of the steps:\n```\ngit remote add <remote_name> git@github.com:<PR author>/tensorflow.git\ngit fetch <remote_name>\ngit checkout -b <local-branch-name> <remote_name>/<PR branch name>\nmake changes and commit to local branch\npush changes to remove branch\ngit push <remote_name> <PR branch name>\nremove the temp remote to clean up your git environment.\ngit remote rm <remote_name>\n```\n\n\nPython notes\nMost PRs for TensorFlow Lite Micro will be C++ only. Adding some notes on Python\nthat can be expanded and improved as necessary.\n\n\nTensorFlow guide\n    for Python development\n\n\nyapf should be used for formatting.\nyapf log_parser.py -i --style='{based_on_style: pep8, indent_width: 2}'\n\n\nContinuous Integration System\n\nAs a contributor, please make sure that the TfLite Micro build is green.\n    You can click on the details link to see what the errors are:\n\n\n\n\nTests that are run as part of the CI are with the\n    micro/tools/ci_build/test_all.sh\n    script when run with the GITHUB_PRESUBMIT command line parameter:\n    tensorflow/lite/micro/tools/ci_build/test_all.sh GITHUB_PRESUBMIT\n\n\nIf an error is not reproducible on your development machine, you can\n    recreate the docker container that is used on the CI servers.\n\n\nFirst, create a build a TFLM docker image with:\n    tensorflow/tools/ci_build/ci_build.sh micro bash\n    The second parameter to the ci_build.sh script is not important. It can\n    be any command.\n\n\nNext, mount the tensorflow repo on your machine to the docker container.\n    Please be careful (or make a separate clone of tensorflow) since any\n    changes docker container will also be reflected in the directory in the\n    host machine.\n    docker run -v `pwd`:/tensorflow -it tf_ci.micro bash\n    # cd tensorflow\n\n\nIf you would prefer to not mount your local folder on the docker image,\n    you can also simply download the branch:\n    docker run -it tf_ci.micro bash\n    # wget https://github.com/&lt;github-username&gt;/tensorflow/archive/&lt;git-branch&gt;.zip\n    # unzip &lt;git-branch&gt;.zip\n    # cd tensorflow-&lt;git-branch&gt;\n\n\nWithin the docker container, you can now run the TFLM test script, or\n    any other command that you would like to test. For example, the following\n    commands will run all of the TFLM checks:\n    # tensorflow/lite/micro/tools/ci_build/test_all.sh GITHUB_PRESUBMIT",
  "dateCreated": "2015-11-07",
  "dateModified": "2022-02-18",
  "datePublished": "2022-02-02",
  "description": [
    "An Open Source Machine Learning Framework for Everyone",
    "**If you want to contribute to TensorFlow, be sure to review the\n[contribution guidelines](CONTRIBUTING.md). This project adheres to TensorFlow's\n[code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to\nuphold this code.** \n",
    "The TensorFlow project strives to abide by generally accepted best practices in\nopen-source software development: \n"
  ],
  "downloadUrl": "https://github.com/tensorflow/tensorflow/releases",
  "fullName": "tensorflow/tensorflow",
  "hasBuildFile": [
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/gcs_test/Dockerfile",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/pip_package/Dockerfile"
  ],
  "hasDocumentation": [
    "https://github.com/tensorflow/tensorflow/tree/v2.6.0/tensorflow/tools/docs",
    "https://github.com/tensorflow/tensorflow/tree/v2.6.0/tensorflow/lite/micro/docs"
  ],
  "hasExecutableNotebook": [
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/autograph/g3doc/pyct_tutorial.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/autograph/g3doc/reference/_control_flow_tutorial.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/ops/numpy_ops/g3doc/TensorFlow_NumPy_Keras_and_Distribution_Strategy.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/ops/numpy_ops/g3doc/TensorFlow_Numpy_Distributed_Image_Classification.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/ops/numpy_ops/g3doc/TensorFlow_NumPy_Text_Generation.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/compiler/xla/g3doc/tutorials/jit_compile.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/compiler/xla/g3doc/tutorials/autoclustering_xla.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/examples/hello_world/create_sine_model.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/examples/hello_world/train/train_hello_world_model.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/examples/micro_speech/train_speech_model.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/examples/micro_speech/train/train_micro_speech_model.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/examples/magic_wand/train/train_magic_wand_model.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/examples/experimental_new_converter/Keras_LSTM_fusion_Codelab.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/examples/experimental_new_converter/keras_lstm.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/tutorials/model_maker_audio_classification.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/tutorials/model_maker_question_answer.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/tutorials/model_maker_text_classification.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/tutorials/model_maker_object_detection.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/tutorials/model_maker_image_classification.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/performance/post_training_float16_quant.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/performance/post_training_integer_quant.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/performance/post_training_integer_quant_16x8.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/performance/post_training_quant.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/examples/style_transfer/overview.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/examples/super_resolution/overview.ipynb",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/g3doc/convert/metadata_writer_tutorial.ipynb"
  ],
  "hasScriptFile": [
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/third_party/toolchains/preconfig/ubuntu16.04/gcc7_manylinux2010/cc_wrapper.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/third_party/toolchains/preconfig/ubuntu16.04/clang/cc_wrapper.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tools/tf_env_collect.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/autograph/pyct/inspect_utils_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/tools/xla_multithread_symbols_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/tools/no_xla_multithread_symbols_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/tools/skip_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/debug/examples/v2/examples_v2_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/debug/examples/v1/examples_v1_debug_keras_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/debug/examples/v1/examples_v1_debug_errors_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/debug/examples/v1/examples_v1_debug_tflearn_iris_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/debug/examples/v1/examples_v1_offline_analyzer_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/debug/examples/v1/examples_v1_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/debug/examples/v1/examples_v1_debug_fibonacci_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/debug/examples/v1/examples_v1_debug_mnist_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/tpu/profiler/pip_package/build_pip_package.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/python/tpu/client/pip_package/build_pip_package.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/java/maven/release.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/java/maven/run_inside_container.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/compiler/mlir/hlo/build_tools/build_mlir.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/compiler/xla/tools/interactive_graphviz_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/c/generate-pc.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/c/experimental/ops/update_cpp_ops.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/core/kernels/mlir_generated/build_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/core/api_def/update_api_def.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/code_link_check.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/ci_sanity.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/ci_build.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/build_rbe.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_gcc6.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_bazel.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_golang.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_buildifier_from_source.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_openblas_ppc64le.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_golang_centos.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_yum_packages.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_hdf5_ppc64le.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_deb_packages.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_hadoop.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_pi_python3x_toolchain.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_pip_packages_remote.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_auditwheel.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_mpi.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_pip_packages_by_version.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_python3.6_pip_packages.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_pi_python3_toolchain.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_patchelf.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/build_and_install_python.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_bazel_from_source.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_centos_pip_packages.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_clang.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_pip_packages.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_golang_ppc64le.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_bootstrap_deb_packages.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_buildifier.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_proto3.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_python37.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_latest_clang.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_centos_python36.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_cmake.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/install/install_pi_toolchain.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/devtoolset/rpm-patch.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/devtoolset/build_devtoolset.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/devtoolset/fixlinks.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/presubmit/macos/py37_cc/build.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/presubmit/ubuntu_16/gpu_py39_full/build.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/presubmit/ubuntu_16/android/build.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/presubmit/ubuntu_16/gpu_py36_full/build.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/presubmit/ubuntu_16/cpu_py39_full/build.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/presubmit/ubuntu_16/sanity/build.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/presubmit/ubuntu_16/cpu_py36_full/build.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/macos/cpu_py38_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/macos/cpu_py39_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/macos/cpu_py37_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/macos/cpu_py38_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/macos/cpu_py37_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/macos/cpu_py36_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/macos/cpu_py36_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/macos/cpu_py39_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/macos/cpu_libtensorflow.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_py37_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_py36_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_py38_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/cpu_py38_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_py37_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/cpu_py39_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_py39_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_libtensorflow.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/cpu_py37_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/cpu_py38_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/cpu_py37_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_py39_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/cpu_py36_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/sanity.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/cpu_py36_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/cpu_py39_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/cpu_libtensorflow.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_pip_on_cpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_py38_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/rel/ubuntu/gpu_py36_nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/a100/nightly.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/horovod/gpu/nightly.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/pi/build_raspberry_pi.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/ctpu/ctpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/osx/libtensorflow_gpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/osx/libtensorflow_cpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/osx/libtensorflow_rocm.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/osx/cpu/run_contrib.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/osx/cpu/run_py2_cc_core.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/osx/cpu/run_py3_cc_core.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/common.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/ubuntu_16/custom_op/release.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/ubuntu_16/custom_op/nightly.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/ubuntu_16/tpu_py37_full/nonpip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/ubuntu_16/sanity/build.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/windows/gpu_py39_full/release_pip_rename.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/windows/cpu_py38_full/release_pip_rename.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/windows/gpu_py37_full/release_pip_rename.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/windows/gpu_py36_full/release_pip_rename.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/windows/cpu_py39_full/release_pip_rename.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/windows/gpu_py38_full/release_pip_rename.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/windows/cpu_py37_full/release_pip_rename.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/release/windows/cpu_py36_full/release_pip_rename.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/protobuf/protobuf_optimized_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/windows/libtensorflow_gpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/windows/libtensorflow_cpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/windows/bazel/common_env.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/windows/bazel/bazel_test_lib.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/windows/integration/gpu_pip_on_cpu/build_tf_windows.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/windows/cpu/pip/build_tf_windows.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/windows/cpu/bazel/run_cc_test_windows.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/windows/gpu/pip/build_tf_windows.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/windows/gpu/bazel/run_cc_test_windows.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/nightly_release_smoke_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/docker_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/benchmark.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/run_pip_tests.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/test_user_ops.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/hadoop.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/docker_cpu_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/cmake.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/integration_tests.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/android_full.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/print_build_info.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/pip_new.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/libtensorflow_nightly_symlink.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/py_test_delegate.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/builds_common.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/test_tutorials.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/android.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/builds/libtensorflow.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/libtensorflow_gpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/libtensorflow_cpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/libtensorflow_docker.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/libtensorflow_rocm.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/libtensorflow.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/ppc64le/cpu/run_py2.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/ppc64le/cpu/run_py3.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/ppc64le/gpu/run_py2.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/ppc64le/gpu/run_py3.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/cmake/run.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/rocm/run_gpu_single.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/rocm/rocm_py37_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/rocm/run_gpu_multi.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/rocm/run_cpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/rocm/rocm_py39_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/rocm/rocm_py38_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/rocm/rocm_py36_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/cpu/run_py3_contrib.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/cpu/run_py3_core.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/cpu/run_py2_core.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/cpu/run_cc_core.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/cpu/run_mkl.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/mkl/build-dev-container.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/mkl/basic-mkl-gpu-test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/mkl/install_openmpi_horovod.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/mkl/basic-mkl-test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/gpu/run_py3_core.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/gpu/run_cc_core.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/linux/gpu/run_mkl.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/xla/linux/gpu/run_py3.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/gpu_build/parallel_gpu_execute.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/build_scripts/DEFAULT_TEST_TARGETS.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/macos/cpu_py37.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/macos/cpu_py36.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/macos/cpu_py38.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/macos/cpu_py39.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/ubuntu/gpu_py39.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/ubuntu/gpu_py38.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/ubuntu/gpu_py36.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/ubuntu/cpu_py37.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/ubuntu/cpu_py36.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/ubuntu/gpu_py37.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/ubuntu/cpu_py38.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/ubuntu/cpu_py39.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/ci_build/nightly_release/windows/upload_nightly_pip.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/lib_package/concat_licenses.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/lib_package/libtensorflow_java_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/lib_package/libtensorflow_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/gcs_test/gcs_smoke_wrapper.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/gcs_test/gcs_smoke.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/dockerfiles/tests/build-gpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/dockerfiles/tests/import-gpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/dockerfiles/tests/import-onednn.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/dockerfiles/tests/import.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/dockerfiles/tests/import-onednn-horovod.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/dockerfiles/tests/build-cpu.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/dockerfiles/tests/build-mkl-horovod.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/pip_package/build_pip_package.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/tools/git/gen_git_source.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/python/convert_file_to_c_source_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/java/build_aar_for_release.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/swift/docsgen/TensorFlowLiteSwift/scripts/download_frameworks.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/lib_package/concat_licenses.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_x86.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_bazel.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/ci_build_micro_projects.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_cortex_m_generic.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_mbed.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/install_arduino_cli.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/install_mbed_cli.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_arc.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_arduino.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_bluepill.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_code_style.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_arduino_library.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_cortex_m_corstone_300.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_project_generation.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_all.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_esp32.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_stm32f4.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/helper_functions.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_mbed_library.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/ci_build/test_sparkfun.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/generate_keil_project_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/renode_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/flatbuffers_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/check_optimized_kernel_dir.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/fix_arduino_subfolders_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/download_and_extract.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/ethos_u_core_platform_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/bash_helpers.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/corstone_300_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/pigweed_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/merge_arduino_zips_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/transform_arduino_source_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/person_detection_int8_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/transform_esp_source_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/arm_gcc_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/targets/apollo3evb/prep_apollo3_files.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/targets/hexagon/download_hexagon.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/ext_libs/xtensa_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/ext_libs/person_detection_int8_vela_convert.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/ext_libs/cmsis_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/tools/make/ext_libs/stm32_bare_lib_download.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/examples/hello_world/hello_world_binary_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/examples/micro_speech/micro_speech_binary_mock_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/examples/person_detection/person_detection_binary_test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/testing/test_xtensa_binary.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/testing/test_ecm3531_binary.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/testing/test_with_arm_corstone_300.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/testing/test_hexagon_binary.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/testing/test_xcore_binary.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/testing/test_leon_binary.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/micro/testing/test_with_renode.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/build_aar.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/build_aar_with_docker.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/cmake/download_toolchains.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/pip_package/build_pip_package_with_bazel.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/pip_package/build_pip_package_with_cmake.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/pip_package/build_pip_package.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/pip_package/update_sources.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/benchmark/ios/build_benchmark_framework.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/make/build_rpi_lib.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/make/build_riscv_lib.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/make/download_dependencies.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/make/build_lib.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/make/build_aarch64_lib.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/make/build_bbb_lib.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/tools/make/build_ios_universal_lib.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/delegates/hexagon/builders/tests/run_tests.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/delegates/gpu/cl/run_tests.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/delegates/gpu/cl/testing/run_delegate_testing.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/delegates/gpu/cl/testing/run_performance_profiling.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/delegates/gpu/cl/testing/run_internal_api_samples.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/ios/hide_symbols_with_allowlist.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/ios/build_frameworks.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/lite/examples/ios/download_models.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/go/test.sh",
    "https://raw.githubusercontent.com/tensorflow/tensorflow/v2.6.0/tensorflow/go/genop/generate.sh"
  ],
  "identifier": [
    "https://doi.org/10.5281/zenodo.4724125"
  ],
  "invocation": [
    "```shell\n$ python\n```\n```python\n>>> import tensorflow as tf\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\nb'Hello, TensorFlow!'\n```\n \n"
  ],
  "issueTracker": "https://api.github.com/repos/tensorflow/tensorflow/issues{/number}",
  "keywords": [
    "tensorflow",
    "machine-learning",
    "python",
    "deep-learning",
    "deep-neural-networks",
    "neural-network",
    "ml",
    "distributed"
  ],
  "license": {
    "name": "Apache License 2.0",
    "url": "https://api.github.com/licenses/apache-2.0"
  },
  "licenseText": "",
  "name": "tensorflow",
  "ownerType": "Organization",
  "programmingLanguage": [
    "C++",
    "Python",
    "MLIR",
    "Starlark",
    "HTML",
    "Go",
    "C",
    "Java",
    "Jupyter Notebook",
    "Shell",
    "Dockerfile",
    "Objective-C++",
    "CMake",
    "Objective-C",
    "Smarty",
    "Swift",
    "Batchfile",
    "C#",
    "SourcePawn",
    "Ruby",
    "Perl",
    "LLVM",
    "Pawn",
    "Roff",
    "Cython",
    "JavaScript",
    "Makefile",
    "Vim Snippet"
  ],
  "releaseNotes": "# Release 2.8.0\r\n\r\n## Major Features and Improvements\r\n\r\n*   `tf.lite`:\r\n    *   Added TFLite builtin op support for the following TF ops:\r\n        *   `tf.raw_ops.Bucketize` op on CPU.\r\n        *   `tf.where` op for data types `tf.int32`/`tf.uint32`/`tf.int8`/`tf.uint8`/`tf.int64`.\r\n        *   `tf.random.normal` op for output data type `tf.float32` on CPU.\r\n        *   `tf.random.uniform` op for output data type `tf.float32` on CPU.\r\n        *   `tf.random.categorical` op for output data type `tf.int64` on CPU.\r\n\r\n*   `tensorflow.experimental.tensorrt`:\r\n    *   `conversion_params` is now deprecated inside `TrtGraphConverterV2` in favor of direct arguments: `max_workspace_size_bytes`, `precision_mode`, `minimum_segment_size`, `maximum_cached_engines`, `use_calibration` and `allow_build_at_runtime`.\r\n    *   Added a new parameter called `save_gpu_specific_engines` to the `.save()` function inside `TrtGraphConverterV2`. When `False`, the `.save()` function won't save any TRT engines that have been built. When `True` (default), the original behavior is preserved.\r\n    *   `TrtGraphConverterV2` provides a new API called `.summary()` which outputs a summary of the inference converted by TF-TRT. It namely shows each `TRTEngineOp` with their input(s)' and output(s)' shape and dtype. A detailed version of the summary is available which prints additionally all the TensorFlow OPs included in each of the `TRTEngineOp`s.\r\n\r\n*   `tf.tpu.experimental.embedding`:\r\n    *   `tf.tpu.experimental.embedding.FeatureConfig` now takes an additional argument `output_shape` which can specify the shape of the output activation for the feature.\r\n    *   `tf.tpu.experimental.embedding.TPUEmbedding` now has the same behavior as `tf.tpu.experimental.embedding.serving_embedding_lookup` which can take arbitrary rank of dense and sparse tensor. For ragged tensor, though the input tensor remains to be rank 2, the activations now can be rank 2 or above by specifying the output shape in the feature config or via the build method.\r\n\r\n*   Add [`tf.config.experimental.enable_op_determinism`](https://www.tensorflow.org/api_docs/python/tf/config/experimental/enable_op_determinism), which makes TensorFlow ops run deterministically at the cost of performance.  Replaces the `TF_DETERMINISTIC_OPS` environmental variable, which is now deprecated. The \"Bug Fixes and Other Changes\" section lists more determinism-related changes.\r\n\r\n*   (Since TF 2.7) Add [PluggableDevice](https://blog.tensorflow.org/2021/06/pluggabledevice-device-plugins-for-TensorFlow.html) support to [TensorFlow Profiler](https://github.com/tensorflow/community/blob/master/rfcs/20210513-pluggable-profiler-for-tensorflow.md).\r\n\r\n## Bug Fixes and Other Changes\r\n\r\n* `tf.data`:\r\n  * The optimization `parallel_batch` now becomes default if not disabled by users, which will parallelize copying of batch elements.\r\n  * Added the ability for `TensorSliceDataset` to identify and handle inputs that are files. This enables creating hermetic SavedModels when using datasets created from files.\r\n    *   The optimization `parallel_batch` now becomes default if not disabled by users, which will parallelize copying of batch elements.\r\n    *   Added the ability for `TensorSliceDataset` to identify and handle inputs that are files. This enables creating hermetic SavedModels when using datasets created from files.\r\n\r\n*   `tf.lite`:\r\n    *   Adds GPU Delegation support for serialization to Java API. This boosts initialization time up to 90% when OpenCL is available.\r\n    *   Deprecated `Interpreter::SetNumThreads`, in favor of `InterpreterBuilder::SetNumThreads`.\r\n\r\n*   `tf.keras`:\r\n    *   Adds `tf.compat.v1.keras.utils.get_or_create_layer` to aid migration to TF2 by enabling tracking of nested keras models created in TF1-style, when used with the `tf.compat.v1.keras.utils.track_tf1_style_variables` decorator.\r\n    *   Added a `tf.keras.layers.experimental.preprocessing.HashedCrossing` layer which applies the hashing trick to the concatenation of crossed scalar inputs. This provides a stateless way to try adding feature crosses of integer or string data to a model.\r\n    *   Removed `keras.layers.experimental.preprocessing.CategoryCrossing`. Users should migrate to the `HashedCrossing` layer or use `tf.sparse.cross`/`tf.ragged.cross` directly.\r\n    *   Added additional `standardize` and `split` modes to `TextVectorization`:\r\n        *   `standardize=\"lower\"` will lowercase inputs.\r\n        *   `standardize=\"string_punctuation\"` will remove all puncuation.\r\n        *   `split=\"character\"` will split on every unicode character.\r\n    *   Added an `output_mode` argument to the `Discretization` and `Hashing` layers with the same semantics as other preprocessing layers. All categorical preprocessing layers now support `output_mode`.\r\n    *   All preprocessing layer output will follow the compute dtype of a `tf.keras.mixed_precision.Policy`, unless constructed with `output_mode=\"int\"` in which case output will be `tf.int64`. The output type of any preprocessing layer can be controlled individually by passing a `dtype` argument to the layer.\r\n    *   `tf.random.Generator` for keras initializers and all RNG code.\r\n    *   Added 3 new APIs for enable/disable/check the usage of `tf.random.Generator` in keras backend, which will be the new backend for all the RNG in Keras. We plan to switch on the new code path by default in tf 2.8, and the behavior change will likely to cause some breakage on user side (eg if the test is checking against some golden nubmer). These 3 APIs will allow user to disable and switch back to legacy behavior if they prefer. In future (eg TF 2.10), we expect to totally remove the legacy code path (stateful random Ops), and these 3 APIs will be removed as well.\r\n    *   `tf.keras.callbacks.experimental.BackupAndRestore` is now available as `tf.keras.callbacks.BackupAndRestore`. The experimental endpoint is deprecated and will be removed in a future release.\r\n    *   `tf.keras.experimental.SidecarEvaluator` is now available as `tf.keras.utils.SidecarEvaluator`. The experimental endpoint is deprecated and will be removed in a future release.\r\n    *   Metrics update and collection logic in default `Model.train_step()` is now customizable via overriding `Model.compute_metrics()`.\r\n    *   Losses computation logic in default `Model.train_step()` is now customizable via overriding `Model.compute_loss()`.\r\n    *   `jit_compile` added to `Model.compile()` on an opt-in basis to compile the model's training step with [XLA](https://www.tensorflow.org/xla). Note that `jit_compile=True` may not necessarily work for all models.\r\n\r\n*   Deterministic Op Functionality:\r\n    *   Fix regression in deterministic selection of deterministic cuDNN convolution algorithms, a regression that was introduced in v2.5. Note that nondeterministic out-of-memory events while selecting algorithms could still lead to nondeterminism, although this is very unlikely. This additional, unlikely source will be eliminated in a later version.\r\n    *   Add determinsitic GPU implementations of:\r\n        *   `tf.function(jit_compile=True)`'s that use `Scatter`.\r\n        *   (since v2.7) Stateful ops used in `tf.data.Dataset`\r\n        *   (since v2.7) `tf.convert_to_tensor` when fed with (sparse) `tf.IndexedSlices` (because it uses `tf.math.unsorted_segment_sum`)\r\n        *   (since v2.7) `tf.gather` backprop (because `tf.convert_to_tensor` reduces `tf.gather`'s (sparse) `tf.IndexedSlices` gradients into its dense `params` input)\r\n        *   (since v2.7) `tf.math.segment_mean`\r\n        *   (since v2.7) `tf.math.segment_prod`\r\n        *   (since v2.7) `tf.math.segment_sum`\r\n        *   (since v2.7) `tf.math.unsorted_segment_mean`\r\n        *   (since v2.7) `tf.math.unsorted_segment_prod`\r\n        *   (since v2.7) `tf.math.unsorted_segment_sum`\r\n        *   (since v2.7) `tf.math.unsorted_segment_sqrt`\r\n        *   (since v2.7) `tf.nn.ctc_loss` (resolved, possibly in prior release, and confirmed with tests)\r\n        *   (since v2.7)`tf.nn.sparse_softmax_crossentropy_with_logits`\r\n    *   (since v2.7) Run `tf.scatter_nd` and other related scatter functions, such as `tf.tensor_scatter_nd_update`, on CPU (with significant performance penalty).\r\n    *   Add determinism-unimplemented exception-throwing to the following ops.  When op-determinism is expected (i.e. after `tf.config.experimental.enable_op_determinism` has been called), an attempt to use the specified paths through the following ops on a GPU will cause `tf.errors.UnimplementedError` (with an understandable message), unless otherwise specified, to be thrown.\r\n        *   `FakeQuantWithMinMaxVarsGradient` and `FakeQuantWithMinMaxVarsPerChannelGradient`\r\n        *   (since v2.7) `tf.compat.v1.get_seed` if the global random seed has not yet been set (via `tf.random.set_seed`). Throws `RuntimeError` from Python or `InvalidArgument` from C++\r\n        *   (since v2.7) `tf.compat.v1.nn.fused_batch_norm` backprop to `offset` when `is_training=False`\r\n        *   (since v2.7) `tf.image.adjust_contrast` forward\r\n        *   (since v2.7) `tf.image.resize` with `method=ResizeMethod.NEAREST` backprop\r\n        *   (since v2.7) `tf.linalg.svd`\r\n        *   (since v2.7) `tf.math.bincount`\r\n        *   (since v2.7) `tf.nn.depthwise_conv2d` backprop to `filter` when not using cuDNN convolution\r\n        *   (since v2.7) `tf.nn.dilation2d` gradient\r\n        *   (since v2.7) `tf.nn.max_pool_with_argmax` gradient\r\n        *   (since v2.7) `tf.raw_ops.DebugNumericSummary` and `tf.raw_ops.DebugNumericSummaryV2`\r\n        *   (since v2.7) `tf.timestamp`. Throws `FailedPrecondition`\r\n        *   (since v2.7) `tf.Variable.scatter_add` (and other scatter methods, both on ref and resource variables)\r\n        *   (since v2.7) The random-number-generating ops in the `tf.random` module when the global random seed has not yet been set (via `tf.random.set_seed`). Throws `RuntimeError` from Python or `InvalidArgument` from C++\r\n\r\n*   TensorFlow-oneDNN no longer supports [explicit use of oneDNN blocked tensor format](https://github.com/tensorflow/tensorflow/pull/53288), e.g., setting the environment variable `TF_ENABLE_MKL_NATIVE_FORMAT` will not have any effect.\r\n*   TensorFlow has been validated on Windows Subsystem for Linux 2 (aka WSL 2) for both GPUs and CPUs.  \r\n*   Due to security issues (see section below), all boosted trees code has been deprecated. Users should switch to [TensorFlow Decision Forests](https://github.com/tensorflow/decision-forests). TF's boosted trees code will be eliminated before the branch cut for TF 2.9 and will no longer be present since that release.\r\n\r\n## Security\r\n\r\n*   Fixes a floating point division by 0 when executing convolution operators ([CVE-2022-21725](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21725))\r\n*   Fixes a heap OOB read in shape inference for `ReverseSequence` ([CVE-2022-21728](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21728))\r\n*   Fixes a heap OOB access in `Dequantize` ([CVE-2022-21726](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21726))\r\n*   Fixes an integer overflow in shape inference for `Dequantize` ([CVE-2022-21727](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21727))\r\n*   Fixes a heap OOB access in `FractionalAvgPoolGrad` ([CVE-2022-21730](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21730))\r\n*   Fixes an overflow and divide by zero in `UnravelIndex` ([CVE-2022-21729](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21729))\r\n*   Fixes a type confusion in shape inference for `ConcatV2` ([CVE-2022-21731](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21731))\r\n*   Fixes an OOM in `ThreadPoolHandle` ([CVE-2022-21732](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21732))\r\n*   Fixes an OOM due to integer overflow in `StringNGrams` ([CVE-2022-21733](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21733))\r\n*   Fixes more issues caused by incomplete validation in boosted trees code ([CVE-2021-41208](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41208))\r\n*   Fixes an integer overflows in most sparse component-wise ops ([CVE-2022-23567](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23567))\r\n*   Fixes an integer overflows in `AddManySparseToTensorsMap` ([CVE-2022-23568](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23568))\r\n*   Fixes a number of `CHECK`-failures in `MapStage` ([CVE-2022-21734](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21734))\r\n*   Fixes a division by zero in `FractionalMaxPool` ([CVE-2022-21735](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21735))\r\n*   Fixes a number of `CHECK`-fails when building invalid/overflowing tensor shapes ([CVE-2022-23569](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23569))\r\n*   Fixes an undefined behavior in `SparseTensorSliceDataset` ([CVE-2022-21736](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21736))\r\n*   Fixes an assertion failure based denial of service via faulty bin count operations ([CVE-2022-21737](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21737))\r\n*   Fixes a reference binding to null pointer in `QuantizedMaxPool` ([CVE-2022-21739](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21739))\r\n*   Fixes an integer overflow leading to crash in `SparseCountSparseOutput` ([CVE-2022-21738](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21738))\r\n*   Fixes a heap overflow in `SparseCountSparseOutput` ([CVE-2022-21740](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21740))\r\n*   Fixes an FPE in `BiasAndClamp` in TFLite ([CVE-2022-23557](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23557))\r\n*   Fixes an FPE in depthwise convolutions in TFLite ([CVE-2022-21741](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21741))\r\n*   Fixes an integer overflow in TFLite array creation ([CVE-2022-23558](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23558))\r\n*   Fixes an integer overflow in TFLite ([CVE-2022-23559](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23559))\r\n*   Fixes a dangerous OOB write in TFLite ([CVE-2022-23561](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23561))\r\n*   Fixes a vulnerability leading to read and write outside of bounds in TFLite ([CVE-2022-23560](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23560))\r\n*   Fixes a set of vulnerabilities caused by using insecure temporary files ([CVE-2022-23563](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23563))\r\n*   Fixes an integer overflow in Range resulting in undefined behavior and OOM ([CVE-2022-23562](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23562))\r\n*   Fixes a vulnerability where missing validation causes `tf.sparse.split` to crash when `axis` is a tuple ([CVE-2021-41206](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41206))\r\n*   Fixes a `CHECK`-fail when decoding resource handles from proto ([CVE-2022-23564](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23564))\r\n*   Fixes a `CHECK`-fail with repeated `AttrDef` ([CVE-2022-23565](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23565))\r\n*   Fixes a heap OOB write in Grappler ([CVE-2022-23566](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23566))\r\n*   Fixes a `CHECK`-fail when decoding invalid tensors from proto ([CVE-2022-23571](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23571))\r\n*   Fixes a null-dereference when specializing tensor type ([CVE-2022-23570](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23570))\r\n*   Fixes a crash when type cannot be specialized ([CVE-2022-23572](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23572))\r\n*   Fixes a heap OOB read/write in `SpecializeType` ([CVE-2022-23574](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23574))\r\n*   Fixes an unitialized variable access in `AssignOp` ([CVE-2022-23573](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23573))\r\n*   Fixes an integer overflow in `OpLevelCostEstimator::CalculateTensorSize` ([CVE-2022-23575](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23575))\r\n*   Fixes an integer overflow in `OpLevelCostEstimator::CalculateOutputSize` ([CVE-2022-23576](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23576))\r\n*   Fixes a null dereference in `GetInitOp` ([CVE-2022-23577](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23577))\r\n*   Fixes a memory leak when a graph node is invalid ([CVE-2022-23578](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23578))\r\n*   Fixes an abort caused by allocating a vector that is too large ([CVE-2022-23580](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23580))\r\n*   Fixes multiple `CHECK`-failures during Grappler's `IsSimplifiableReshape` ([CVE-2022-23581](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23581))\r\n*   Fixes multiple `CHECK`-failures during Grappler's `SafeToRemoveIdentity` ([CVE-2022-23579](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23579))\r\n*   Fixes multiple `CHECK`-failures in `TensorByteSize` ([CVE-2022-23582](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23582))\r\n*   Fixes multiple `CHECK`-failures in binary ops due to type confusion ([CVE-2022-23583](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23583))\r\n*   Fixes a use after free in `DecodePng` kernel ([CVE-2022-23584](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23584))\r\n*   Fixes a memory leak in decoding PNG images ([CVE-2022-23585](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23585))\r\n*   Fixes multiple `CHECK`-fails in `function.cc` ([CVE-2022-23586](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23586))\r\n*   Fixes multiple  `CHECK`-fails due to attempting to build a reference tensor ([CVE-2022-23588](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23588))\r\n*   Fixes an integer overflow in Grappler cost estimation of crop and resize operation ([CVE-2022-23587](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23587))\r\n*   Fixes a null pointer dereference in Grappler's `IsConstant` ([CVE-2022-23589](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23589))\r\n*   Fixes a `CHECK` failure in constant folding ([CVE-2021-41197](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41197))\r\n*   Fixes a stack overflow due to self-recursive function in `GraphDef` ([CVE-2022-23591](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23591))\r\n*   Fixes a heap OOB access in `RunForwardTypeInference` ([CVE-2022-23592](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23592))\r\n*   Fixes a crash due to erroneous `StatusOr` ([CVE-2022-23590](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23590))\r\n*   Fixes multiple crashes and heap OOB accesses in TFG dialect (MLIR) ([CVE-2022-23594](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23594))\r\n*   Fixes a segfault in `simplifyBroadcast` (MLIR) ([CVE-2022-23593](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23593))\r\n*   Fixes a null pointer dereference in `BuildXlaCompilationCache` (XLA) ([CVE-2022-23595](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23595))\r\n*   Updates `icu` to `69.1` to handle [CVE-2020-10531](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-10531)\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n8bitmp3, Adam Lanicek, ag.ramesh, alesapin, Andrew Goodbody, annasuheyla, Ariel Elkin, Arnab Dutta, Ben Barsdell, bhack, cfRod, Chengji Yao, Christopher Bate, dan, Dan F-M, David Korczynski, DEKHTIARJonathan, dengzhiyuan, Deven Desai, Duncan Riach, Eli Osherovich, Ewout Ter Hoeven, ez2take, Faijul Amin, fo40225, Frederic Bastien, gadagashwini, Gauri1 Deshpande, Georgiy Manuilov, Guilherme De L\u00e1zari, Guozhong Zhuang, H1Gdev, homuler, Hongxu Jia, Jacky_Yin, jayfurmanek, jgehw, Jhalak Patel, Jinzhe Zeng, Johan Gunnarsson, Jonathan Dekhtiar, Kaixi Hou, Kanvi Khanna, Kevin Cheng, Koan-Sin Tan, Kruglov-Dmitry, Kun Lu, Lemo, Lequn Chen, long.chen, Louis Sugy, Mahmoud Abuzaina, Mao, Marius Brehler, Mark Harfouche, Martin Patz, Maxiwell S. Garcia, Meenakshi Venkataraman, Michael Melesse, Mrinal Tyagi, M\u00e5ns Nilsson, Nathan John Sircombe, Nathan Luehr, Nilesh Agarwalla, Oktay Ozturk, Patrice Vignola, Pawel-Polyai, Rama Ketineni, Ramesh Sampath, Reza Rahimi, Rob Suderman, Robert Kalmar, Rohit Santhanam, Sachin Muradi, Saduf2019, Samuel Marks, Shi,Guangyong, Sidong-Wei, Srinivasan Narayanamoorthy, Srishti Srivastava, Steven I Reeves, stevenireeves, Supernovae, Tamas Bela Feher, Tao Xu, Thibaut Goetghebuer-Planchon, Thomas Schmeyer, tilakrayal, Valery Mironov, Victor Guo, Vignesh Kothapalli, Vishnuvardhan Janapati, wamuir, Wang,Quintin, William Muir, William Raveane, Yash Goel, Yimei Sun, Yong Tang, Yuduo Wu"
}